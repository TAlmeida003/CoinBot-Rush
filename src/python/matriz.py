
frame = [
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff19120f, 0xff19120f, 0xff19120f, 0xff19120f, 0xff19120f, 0xff19120f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff19120f, 0xff19120f, 0xff322925, 0xff322925, 0xff322925, 0xff322925, 0xff322925, 0xff322925, 0xff19120f, 0xff19120f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0xff19120f, 0xff19120f, 0xff19120f, 0xff322925, 0xff322925, 0xff322925, 0xff19120f, 0xff19120f, 0xff19120f, 0xff19120f, 0xff322925, 0xff322925, 0xff322925, 0xff19120f, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0xff19120f, 0xff686461, 0xff19120f, 0xff322925, 0xff322925, 0xff251c18, 0xff19120f, 0xff4d3424, 0xff7b4e33, 0xff7b4e33, 0xff4d3424, 0xff19120f, 0xff251c18, 0xff322925, 0xff322925, 0xff19120f, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0xff19120f, 0xff686461, 0xff19120f, 0xff322925, 0xff251c18, 0xff3b3431, 0xff19120f, 0xff4d3424, 0xff4d3424, 0xff4d3424, 0xff4d3424, 0xff19120f, 0xff3b3431, 0xff251c18, 0xff322925, 0xff322925, 0xff19120f, 0x00000000, 0x00000000,
0x00000000, 0xff19120f, 0xff686461, 0xff19120f, 0xff251c18, 0xff3b3431, 0xff3b3431, 0xff19120f, 0xff7b4e33, 0xff7b4e33, 0xff4d3424, 0xff7b4e33, 0xff19120f, 0xff3b3431, 0xff3b3431, 0xff251c18, 0xff322925, 0xff322925, 0xff19120f, 0x00000000,
0x00000000, 0xff251c18, 0xff19120f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff19120f, 0xff412b20, 0xff412b20, 0xff412b20, 0xff412b20, 0xff19120f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff251c18, 0xff322925, 0xff19120f, 0x00000000,
0xff1c1310, 0xff322925, 0xff19120f, 0xff2e261f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff19120f, 0xff19120f, 0xff19120f, 0xff19120f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff251c18, 0xff251c18, 0xff19120f,
0xff1c1310, 0xff322925, 0xff19120f, 0xff3b3431, 0xff3b3431, 0xff2e261f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff2e261f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff322925, 0xff19120f,
0xff1c1310, 0xff322925, 0xff251c18, 0xff3b3431, 0xff3b3431, 0xff2e261f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff251c18, 0xff322925, 0xff19120f,
0xff1c1310, 0xff322925, 0xff322925, 0xff251c18, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff2e261f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff251c18, 0xff322925, 0xff19120f,
0xff1c1310, 0xff251c18, 0xff322925, 0xff251c18, 0xff3b3431, 0xff3b3431, 0xff2e261f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff2e261f, 0xff3b3431, 0xff251c18, 0xff322925, 0xff251c18, 0xff19120f,
0xff19120f, 0xff251c18, 0xff322925, 0xff322925, 0xff251c18, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff251c18, 0xff322925, 0xff322925, 0xff251c18, 0xff19120f,
0xff1c1310, 0xff251c18, 0xff251c18, 0xff322925, 0xff322925, 0xff251c18, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff2e261f, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff251c18, 0xff322925, 0xff322925, 0xff251c18, 0xff251c18, 0xff19120f,
0x00000000, 0xff19120f, 0xff251c18, 0xff251c18, 0xff322925, 0xff322925, 0xff251c18, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff3b3431, 0xff251c18, 0xff322925, 0xff322925, 0xff251c18, 0xff251c18, 0xff19120f, 0x00000000,
0x00000000, 0xff19120f, 0xff19120f, 0xff251c18, 0xff251c18, 0xff322925, 0xff322925, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff322925, 0xff322925, 0xff251c18, 0xff251c18, 0xff19120f, 0xff19120f, 0x00000000,
0x00000000, 0x00000000, 0xff19120f, 0xff19120f, 0xff251c18, 0xff251c18, 0xff322925, 0xff322925, 0xff322925, 0xff322925, 0xff322925, 0xff322925, 0xff322925, 0xff322925, 0xff251c18, 0xff251c18, 0xff19120f, 0xff19120f, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff19120f, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff19120f, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff19120f, 0xff19120f, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff251c18, 0xff19120f, 0xff19120f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff19120f, 0xff19120f, 0xff19120f, 0xff19120f, 0xff19120f, 0xff19120f, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

]

def nomalize(hex):
    if hex == 0x00000000:
        return (7 << 16) | (7 << 8) | 6  # Normalized black color
    b = ((hex >> 16) & 0xFF) // 32
    g = ((hex >> 8) & 0xFF) // 32
    r = (hex & 0xFF) // 32

    return (b << 16) | (g << 8) | r


frame_new = []
for i in frame:
    frame_new.append(nomalize(i))
print(frame_new)